# Generated by Django 3.1.6 on 2021-03-03 21:23


import database.validators
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Building',
            fields=[
                ('name', models.CharField(max_length=256, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('number', models.IntegerField()),
                ('CRN', models.IntegerField()),
                ('max_enrollment', models.IntegerField(null=True)),
                ('credit_hours', models.IntegerField(default=4)),
                ('comments', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='CoursePreference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(-1.0), django.core.validators.MaxValueValidator(1.0)])),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='database.course')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'course preferences',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('abbreviation', models.CharField(max_length=4)),
                ('name', models.CharField(max_length=256, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approval', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(blank=True, null=True)),
                ('max_occupancy', models.IntegerField(null=True)),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms+', to='database.building')),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section_id', models.CharField(max_length=4)),
                ('year', models.IntegerField()),
                ('season', models.CharField(choices=[('FL', 'Fall'), ('WI', 'Winter'), ('SP', 'Spring'), ('SU', 'Summer')], max_length=50)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections+', to='database.course')),
            ],
        ),
        migrations.CreateModel(
            name='Weekdays',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monday', models.BooleanField(default=False)),
                ('tuesday', models.BooleanField(default=False)),
                ('wednesday', models.BooleanField(default=False)),
                ('thursday', models.BooleanField(default=False)),
                ('friday', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'possible weekdays',
            },
        ),
        migrations.CreateModel(
            name='TimeBlock',
            fields=[
                ('block_id', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('start_hour', models.IntegerField(choices=[(0, '00'), (1, '01'), (2, '02'), (3, '03'), (4, '04'), (5, '05'), (6, '06'), (7, '07'), (8, '08'), (9, '09'), (10, '10'), (11, '11'), (12, '12')])),
                ('start_minutes', models.IntegerField(choices=[(0, '00'), (5, '05'), (10, '10'), (15, '15'), (20, '20'), (25, '25'), (30, '30'), (35, '35'), (40, '40'), (45, '45'), (50, '50'), (55, '55')])),
                ('end_hour', models.IntegerField(choices=[(0, '00'), (1, '01'), (2, '02'), (3, '03'), (4, '04'), (5, '05'), (6, '06'), (7, '07'), (8, '08'), (9, '09'), (10, '10'), (11, '11'), (12, '12')])),
                ('end_minutes', models.IntegerField(choices=[(0, '00'), (5, '05'), (10, '10'), (15, '15'), (20, '20'), (25, '25'), (30, '30'), (35, '35'), (40, '40'), (45, '45'), (50, '50'), (55, '55')])),
                ('weekdays', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timeblocks+', to='database.weekdays')),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('overseeing_department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='database.department')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.IntegerField(unique=True, validators=[database.validators.student_id_validator])),
                ('class_standing', models.CharField(choices=[('FR', 'Freshman'), ('SO', 'Sophomore'), ('JR', 'Junior'), ('SR', 'Senior'), ('GR', 'Graduate')], max_length=2)),
                ('registrations', models.ManyToManyField(through='database.Registration', to='database.Section')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='section',
            name='other_instructor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sections assisted with+', to='database.teacher'),
        ),
        migrations.AddField(
            model_name='section',
            name='primary_instructor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections taught+', to='database.teacher'),
        ),
        migrations.AddField(
            model_name='section',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections+', to='database.room'),
        ),
        migrations.AddField(
            model_name='section',
            name='schedule',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections+', to='database.schedule'),
        ),
        migrations.AddField(
            model_name='section',
            name='timeblock',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections+', to='database.timeblock'),
        ),
        migrations.AddField(
            model_name='registration',
            name='approving_teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.teacher'),
        ),
        migrations.AddField(
            model_name='registration',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.section'),
        ),
        migrations.AddField(
            model_name='registration',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.student'),
        ),
        migrations.AddField(
            model_name='department',
            name='department_head',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='department supervised+', to='database.teacher'),
        ),
        migrations.CreateModel(
            name='CourseOverlapPreference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(-1.0), django.core.validators.MaxValueValidator(1.0)])),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.course')),
                ('other_course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='other course+', to='database.course')),
            ],
            options={
                'verbose_name_plural': 'course overlap preferences',
            },
        ),
        migrations.AddField(
            model_name='course',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses offered+', to='database.department'),
        ),
        migrations.AddField(
            model_name='course',
            name='overlap_preferences',
            field=models.ManyToManyField(related_name='_course_overlap_preferences_+', through='database.CourseOverlapPreference', to='database.Course'),
        ),
        migrations.CreateModel(
            name='TimePreference',
            fields=[
                ('coursepreference_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='database.coursepreference')),
                ('timeblock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.timeblock')),
            ],
            options={
                'verbose_name_plural': 'time preferences',
            },
            bases=('database.coursepreference',),
        ),
        migrations.CreateModel(
            name='RoomPreference',
            fields=[
                ('coursepreference_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='database.coursepreference')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.room')),
            ],
            options={
                'verbose_name_plural': 'room preferences',
            },
            bases=('database.coursepreference',),
        ),
        migrations.AddField(
            model_name='course',
            name='room_preferences',
            field=models.ManyToManyField(related_name='_course_room_preferences_+', through='database.RoomPreference', to='database.Room'),
        ),
        migrations.AddField(
            model_name='course',
            name='time_preferences',
            field=models.ManyToManyField(related_name='_course_time_preferences_+', through='database.TimePreference', to='database.TimeBlock'),
        ),
    ]
